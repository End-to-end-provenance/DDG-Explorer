[1] "ddg.parse.commands: .ddg.func.depth = 0"
[1] ".ddg.close.last.command.node: .ddg.last.cmd = "
[1] ".ddg.close.last.command.node: .ddg.possible.last.cmd = "
[1] ".ddg.parse.commands: setting .ddg.last.cmd to error <- foo()"
[1] ".ddg.parse.commands: cmd.text = f <- function(a, b, yy, d, e, f) {    ddg.function()    return(ddg.return.value(a + 1))}"
[1] ".ddg.parse.commands evaluating  f <- function(a, b, yy, d, e, f) {" 
[2] ".ddg.parse.commands evaluating      ddg.function()"                 
[3] ".ddg.parse.commands evaluating      return(ddg.return.value(a + 1))"
[4] ".ddg.parse.commands evaluating  }"                                  
[1] ".ddg.parse.commands done evaluating  f <- function(a, b, yy, d, e, f) {" 
[2] ".ddg.parse.commands done evaluating      ddg.function()"                 
[3] ".ddg.parse.commands done evaluating      return(ddg.return.value(a + 1))"
[4] ".ddg.parse.commands done evaluating  }"                                  
[1] ".ddg.parse.commands: last.proc.node.created = Start basicTest.R"
[1] ".ddg.parse.commands: cmd.abrev = f <- function(a, b, yy, d, e, f) {    ddg.function()    retu"
[1] ".ddg.parse.commands: create = TRUE"
[1] ".ddg.parse.commands: create.procedure = TRUE"
[1] ".ddg.parse.commands creating Operation node"
[1] ".ddg.create.data.set.edges.for.cmd: looking for  f in R_GlobalEnv"
[1] ".ddg.save.data: saving f in scope R_GlobalEnv"
[1] ".ddg.proc2data: Looking for f in scope R_GlobalEnv"
[1] ".ddg.parse.commands: cmd.text = x <- 1 + 2"
[1] ".ddg.parse.commands evaluating  x <- 1 + 2"
[1] ".ddg.parse.commands done evaluating  x <- 1 + 2"
[1] ".ddg.parse.commands: last.proc.node.created = Operation f <- function(a, b, yy, d, e, f) {    ddg.function()    retu"
[1] ".ddg.parse.commands: cmd.abrev = x <- 1 + 2"
[1] ".ddg.parse.commands: create = TRUE"
[1] ".ddg.parse.commands: create.procedure = TRUE"
[1] ".ddg.parse.commands creating Operation node"
[1] ".ddg.data.node.exists: Looking for + in scope R_GlobalEnv"
[1] ".ddg.create.data.set.edges.for.cmd: looking for  x in R_GlobalEnv"
[1] ".ddg.save.data: saving x in scope R_GlobalEnv"
[1] ".ddg.proc2data: Looking for x in scope R_GlobalEnv"
[1] ".ddg.parse.commands: cmd.text = y <- paste(\"a\", \"b\", \"c\")"
[1] ".ddg.parse.commands evaluating  y <- paste(\"a\", \"b\", \"c\")"
[1] ".ddg.parse.commands done evaluating  y <- paste(\"a\", \"b\", \"c\")"
[1] ".ddg.parse.commands: last.proc.node.created = Operation x <- 1 + 2"
[1] ".ddg.parse.commands: cmd.abrev = y <- paste(\\\"a\\\", \\\"b\\\", \\\"c\\\")"
[1] ".ddg.parse.commands: create = TRUE"
[1] ".ddg.parse.commands: create.procedure = TRUE"
[1] ".ddg.parse.commands creating Operation node"
[1] ".ddg.data.node.exists: Looking for paste in scope R_GlobalEnv"
[1] ".ddg.create.data.set.edges.for.cmd: looking for  y in R_GlobalEnv"
[1] ".ddg.save.data: saving y in scope R_GlobalEnv"
[1] ".ddg.proc2data: Looking for y in scope R_GlobalEnv"
[1] ".ddg.parse.commands: cmd.text = z <- x + 2"
[1] ".ddg.parse.commands evaluating  z <- x + 2"
[1] ".ddg.parse.commands done evaluating  z <- x + 2"
[1] ".ddg.parse.commands: last.proc.node.created = Operation y <- paste(\\\"a\\\", \\\"b\\\", \\\"c\\\")"
[1] ".ddg.parse.commands: cmd.abrev = z <- x + 2"
[1] ".ddg.parse.commands: create = TRUE"
[1] ".ddg.parse.commands: create.procedure = TRUE"
[1] ".ddg.parse.commands creating Operation node"
[1] ".ddg.data.node.exists: Looking for + in scope R_GlobalEnv"
[1] ".ddg.data.node.exists: Looking for x in scope R_GlobalEnv"
[1] ".ddg.create.data.set.edges.for.cmd: looking for  z in R_GlobalEnv"
[1] ".ddg.save.data: saving z in scope R_GlobalEnv"
[1] ".ddg.proc2data: Looking for z in scope R_GlobalEnv"
[1] ".ddg.parse.commands: cmd.text = w <- x + 3"
[1] ".ddg.parse.commands evaluating  w <- x + 3"
[1] ".ddg.parse.commands done evaluating  w <- x + 3"
[1] ".ddg.parse.commands: last.proc.node.created = Operation z <- x + 2"
[1] ".ddg.parse.commands: cmd.abrev = w <- x + 3"
[1] ".ddg.parse.commands: create = TRUE"
[1] ".ddg.parse.commands: create.procedure = TRUE"
[1] ".ddg.parse.commands creating Operation node"
[1] ".ddg.data.node.exists: Looking for + in scope R_GlobalEnv"
[1] ".ddg.data.node.exists: Looking for x in scope R_GlobalEnv"
[1] ".ddg.create.data.set.edges.for.cmd: looking for  w in R_GlobalEnv"
[1] ".ddg.save.data: saving w in scope R_GlobalEnv"
[1] ".ddg.proc2data: Looking for w in scope R_GlobalEnv"
[1] ".ddg.parse.commands: cmd.text = year <- c(1992, 1995)"
[1] ".ddg.parse.commands evaluating  year <- c(1992, 1995)"
[1] ".ddg.parse.commands done evaluating  year <- c(1992, 1995)"
[1] ".ddg.parse.commands: last.proc.node.created = Operation w <- x + 3"
[1] ".ddg.parse.commands: cmd.abrev = year <- c(1992, 1995)"
[1] ".ddg.parse.commands: create = TRUE"
[1] ".ddg.parse.commands: create.procedure = TRUE"
[1] ".ddg.parse.commands creating Operation node"
[1] ".ddg.data.node.exists: Looking for c in scope R_GlobalEnv"
[1] ".ddg.create.data.set.edges.for.cmd: looking for  year in R_GlobalEnv"
[1] ".ddg.save.data: saving year in scope R_GlobalEnv"
[1] ".ddg.proc2data: Looking for year in scope R_GlobalEnv"
[1] ".ddg.parse.commands: cmd.text = name <- c(\"Ben\", \"Greg\")"
[1] ".ddg.parse.commands evaluating  name <- c(\"Ben\", \"Greg\")"
[1] ".ddg.parse.commands done evaluating  name <- c(\"Ben\", \"Greg\")"
[1] ".ddg.parse.commands: last.proc.node.created = Operation year <- c(1992, 1995)"
[1] ".ddg.parse.commands: cmd.abrev = name <- c(\\\"Ben\\\", \\\"Greg\\\")"
[1] ".ddg.parse.commands: create = TRUE"
[1] ".ddg.parse.commands: create.procedure = TRUE"
[1] ".ddg.parse.commands creating Operation node"
[1] ".ddg.data.node.exists: Looking for c in scope R_GlobalEnv"
[1] ".ddg.create.data.set.edges.for.cmd: looking for  name in R_GlobalEnv"
[1] ".ddg.save.data: saving name in scope R_GlobalEnv"
[1] ".ddg.proc2data: Looking for name in scope R_GlobalEnv"
[1] ".ddg.parse.commands: cmd.text = male <- c(TRUE, TRUE)"
[1] ".ddg.parse.commands evaluating  male <- c(TRUE, TRUE)"
[1] ".ddg.parse.commands done evaluating  male <- c(TRUE, TRUE)"
[1] ".ddg.parse.commands: last.proc.node.created = Operation name <- c(\\\"Ben\\\", \\\"Greg\\\")"
[1] ".ddg.parse.commands: cmd.abrev = male <- c(TRUE, TRUE)"
[1] ".ddg.parse.commands: create = TRUE"
[1] ".ddg.parse.commands: create.procedure = TRUE"
[1] ".ddg.parse.commands creating Operation node"
[1] ".ddg.data.node.exists: Looking for c in scope R_GlobalEnv"
[1] ".ddg.create.data.set.edges.for.cmd: looking for  male in R_GlobalEnv"
[1] ".ddg.save.data: saving male in scope R_GlobalEnv"
[1] ".ddg.proc2data: Looking for male in scope R_GlobalEnv"
[1] ".ddg.parse.commands: cmd.text = kids.df <- data.frame(year, name, male)"
[1] ".ddg.parse.commands evaluating  kids.df <- data.frame(year, name, male)"
[1] ".ddg.parse.commands done evaluating  kids.df <- data.frame(year, name, male)"
[1] ".ddg.parse.commands: last.proc.node.created = Operation male <- c(TRUE, TRUE)"
[1] ".ddg.parse.commands: cmd.abrev = kids.df <- data.frame(year, name, male)"
[1] ".ddg.parse.commands: create = TRUE"
[1] ".ddg.parse.commands: create.procedure = TRUE"
[1] ".ddg.parse.commands creating Operation node"
[1] ".ddg.data.node.exists: Looking for data.frame in scope R_GlobalEnv"
[1] ".ddg.data.node.exists: Looking for year in scope R_GlobalEnv"
[1] ".ddg.data.node.exists: Looking for name in scope R_GlobalEnv"
[1] ".ddg.data.node.exists: Looking for male in scope R_GlobalEnv"
[1] ".ddg.create.data.set.edges.for.cmd: looking for  kids.df in R_GlobalEnv"
[1] ".ddg.save.data: saving kids.df in scope R_GlobalEnv"
[1] ".ddg.proc2data: Looking for kids.df in scope R_GlobalEnv"
[1] ".ddg.parse.commands: cmd.text = x <- NA"
[1] ".ddg.parse.commands evaluating  x <- NA"
[1] ".ddg.parse.commands done evaluating  x <- NA"
[1] ".ddg.parse.commands: last.proc.node.created = Operation kids.df <- data.frame(year, name, male)"
[1] ".ddg.parse.commands: cmd.abrev = x <- NA"
[1] ".ddg.parse.commands: create = TRUE"
[1] ".ddg.parse.commands: create.procedure = TRUE"
[1] ".ddg.parse.commands creating Operation node"
[1] ".ddg.create.data.set.edges.for.cmd: looking for  x in R_GlobalEnv"
[1] ".ddg.save.data: saving x in scope R_GlobalEnv"
[1] ".ddg.proc2data: Looking for x in scope R_GlobalEnv"
[1] ".ddg.parse.commands: cmd.text = y <- NULL"
[1] ".ddg.parse.commands evaluating  y <- NULL"
[1] ".ddg.parse.commands done evaluating  y <- NULL"
[1] ".ddg.parse.commands: last.proc.node.created = Operation x <- NA"
[1] ".ddg.parse.commands: cmd.abrev = y <- NULL"
[1] ".ddg.parse.commands: create = TRUE"
[1] ".ddg.parse.commands: create.procedure = TRUE"
[1] ".ddg.parse.commands creating Operation node"
[1] ".ddg.create.data.set.edges.for.cmd: looking for  y in R_GlobalEnv"
[1] ".ddg.save.data: saving y in scope R_GlobalEnv"
[1] ".ddg.proc2data: Looking for y in scope R_GlobalEnv"
[1] ".ddg.parse.commands: cmd.text = val <- f(w, x, y, z, x + 1, vector())"
[1] ".ddg.parse.commands evaluating  val <- f(w, x, y, z, x + 1, vector())"
[1] ".ddg.close.last.command.node: .ddg.last.cmd = "
[1] ".ddg.close.last.command.node: .ddg.possible.last.cmd = val <- f(w, x, y, z, x + 1, vector())"
[2] ".ddg.close.last.command.node: .ddg.possible.last.cmd = val <- f(w, x, y, z, x + 1, vector())"
[3] ".ddg.close.last.command.node: .ddg.possible.last.cmd = val <- f(w, x, y, z, x + 1, vector())"
[1] ".ddg.open.new.command.node: saving .ddg.last.cmd as val <- f(w, x, y, z, x + 1, vector())"
[2] ".ddg.open.new.command.node: saving .ddg.last.cmd as val <- f(w, x, y, z, x + 1, vector())"
[3] ".ddg.open.new.command.node: saving .ddg.last.cmd as val <- f(w, x, y, z, x + 1, vector())"
[1] ".ddg.get.scope: for.caller = TRUE"
[1] ".ddg.get.env: for.caller = TRUE"
[1] ".ddg.get.frame.number: for.caller ="
[1] ".ddg.data.node.exists: Looking for w in scope R_GlobalEnv"
[1] ".ddg.get.scope: for.caller = FALSE"
[1] ".ddg.get.env: for.caller = FALSE"
[1] ".ddg.get.frame.number: for.caller ="
[1] ".ddg.get.env: for.caller = FALSE"
[1] ".ddg.get.frame.number: for.caller ="
[1] ".ddg.save.data: saving a in scope 0x7fc54ebb7cb0"
[1] ".ddg.proc2data: Looking for a in scope 0x7fc54ebb7cb0"
[1] ".ddg.close.last.command.node: .ddg.last.cmd = val <- f(w, x, y, z, x + 1, vector())"
[2] ".ddg.close.last.command.node: .ddg.last.cmd = val <- f(w, x, y, z, x + 1, vector())"
[3] ".ddg.close.last.command.node: .ddg.last.cmd = val <- f(w, x, y, z, x + 1, vector())"
[1] ".ddg.close.last.command.node: .ddg.possible.last.cmd = "
[1] ".ddg.get.scope: for.caller = TRUE"
[1] ".ddg.get.env: for.caller = TRUE"
[1] ".ddg.get.frame.number: for.caller ="
[1] ".ddg.data.node.exists: Looking for x in scope R_GlobalEnv"
[1] ".ddg.get.scope: for.caller = FALSE"
[1] ".ddg.get.env: for.caller = FALSE"
[1] ".ddg.get.frame.number: for.caller ="
[1] ".ddg.get.env: for.caller = FALSE"
[1] ".ddg.get.frame.number: for.caller ="
[1] ".ddg.save.data: saving b in scope 0x7fc54ebb7cb0"
[1] ".ddg.proc2data: Looking for b in scope 0x7fc54ebb7cb0"
[1] ".ddg.close.last.command.node: .ddg.last.cmd = val <- f(w, x, y, z, x + 1, vector())"
[2] ".ddg.close.last.command.node: .ddg.last.cmd = val <- f(w, x, y, z, x + 1, vector())"
[3] ".ddg.close.last.command.node: .ddg.last.cmd = val <- f(w, x, y, z, x + 1, vector())"
[1] ".ddg.close.last.command.node: .ddg.possible.last.cmd = "
[1] ".ddg.get.scope: for.caller = TRUE"
[1] ".ddg.get.env: for.caller = TRUE"
[1] ".ddg.get.frame.number: for.caller ="
[1] ".ddg.data.node.exists: Looking for y in scope R_GlobalEnv"
[1] ".ddg.get.scope: for.caller = FALSE"
[1] ".ddg.get.env: for.caller = FALSE"
[1] ".ddg.get.frame.number: for.caller ="
[1] ".ddg.get.env: for.caller = FALSE"
[1] ".ddg.get.frame.number: for.caller ="
[1] ".ddg.save.data: saving yy in scope 0x7fc54ebb7cb0"
[1] ".ddg.proc2data: Looking for yy in scope 0x7fc54ebb7cb0"
[1] ".ddg.close.last.command.node: .ddg.last.cmd = val <- f(w, x, y, z, x + 1, vector())"
[2] ".ddg.close.last.command.node: .ddg.last.cmd = val <- f(w, x, y, z, x + 1, vector())"
[3] ".ddg.close.last.command.node: .ddg.last.cmd = val <- f(w, x, y, z, x + 1, vector())"
[1] ".ddg.close.last.command.node: .ddg.possible.last.cmd = "
[1] ".ddg.get.scope: for.caller = TRUE"
[1] ".ddg.get.env: for.caller = TRUE"
[1] ".ddg.get.frame.number: for.caller ="
[1] ".ddg.data.node.exists: Looking for z in scope R_GlobalEnv"
[1] ".ddg.get.scope: for.caller = FALSE"
[1] ".ddg.get.env: for.caller = FALSE"
[1] ".ddg.get.frame.number: for.caller ="
[1] ".ddg.get.env: for.caller = FALSE"
[1] ".ddg.get.frame.number: for.caller ="
[1] ".ddg.save.data: saving d in scope 0x7fc54ebb7cb0"
[1] ".ddg.proc2data: Looking for d in scope 0x7fc54ebb7cb0"
[1] ".ddg.close.last.command.node: .ddg.last.cmd = val <- f(w, x, y, z, x + 1, vector())"
[2] ".ddg.close.last.command.node: .ddg.last.cmd = val <- f(w, x, y, z, x + 1, vector())"
[3] ".ddg.close.last.command.node: .ddg.last.cmd = val <- f(w, x, y, z, x + 1, vector())"
[1] ".ddg.close.last.command.node: .ddg.possible.last.cmd = "
[1] ".ddg.get.scope: for.caller = TRUE"
[1] ".ddg.get.env: for.caller = TRUE"
[1] ".ddg.get.frame.number: for.caller ="
[1] ".ddg.data.node.exists: Looking for + in scope base"
[1] ".ddg.get.scope: for.caller = TRUE"
[1] ".ddg.get.env: for.caller = TRUE"
[1] ".ddg.get.frame.number: for.caller ="
[1] ".ddg.data.node.exists: Looking for x in scope R_GlobalEnv"
[1] ".ddg.get.scope: for.caller = FALSE"
[1] ".ddg.get.env: for.caller = FALSE"
[1] ".ddg.get.frame.number: for.caller ="
[1] ".ddg.get.env: for.caller = FALSE"
[1] ".ddg.get.frame.number: for.caller ="
[1] ".ddg.save.data: saving e in scope 0x7fc54ebb7cb0"
[1] ".ddg.proc2data: Looking for e in scope 0x7fc54ebb7cb0"
[1] ".ddg.close.last.command.node: .ddg.last.cmd = val <- f(w, x, y, z, x + 1, vector())"
[2] ".ddg.close.last.command.node: .ddg.last.cmd = val <- f(w, x, y, z, x + 1, vector())"
[3] ".ddg.close.last.command.node: .ddg.last.cmd = val <- f(w, x, y, z, x + 1, vector())"
[1] ".ddg.close.last.command.node: .ddg.possible.last.cmd = "
[1] ".ddg.get.scope: for.caller = TRUE"
[1] ".ddg.get.env: for.caller = TRUE"
[1] ".ddg.get.frame.number: for.caller ="
[1] ".ddg.data.node.exists: Looking for vector in scope base"
[1] ".ddg.get.scope: for.caller = FALSE"
[1] ".ddg.get.env: for.caller = FALSE"
[1] ".ddg.get.frame.number: for.caller ="
[1] ".ddg.get.env: for.caller = FALSE"
[1] ".ddg.get.frame.number: for.caller ="
[1] ".ddg.save.data: saving f in scope 0x7fc54ebb7cb0"
[1] ".ddg.proc2data: Looking for f in scope 0x7fc54ebb7cb0"
[1] ".ddg.create.function.nodes creating Operation node"
[1] ".ddg.close.last.command.node: .ddg.last.cmd = val <- f(w, x, y, z, x + 1, vector())"
[2] ".ddg.close.last.command.node: .ddg.last.cmd = val <- f(w, x, y, z, x + 1, vector())"
[3] ".ddg.close.last.command.node: .ddg.last.cmd = val <- f(w, x, y, z, x + 1, vector())"
[1] ".ddg.close.last.command.node: .ddg.possible.last.cmd = "
[1] ".ddg.data.node.exists: Looking for f in scope R_GlobalEnv"
[1] ".ddg.get.scope: for.caller = FALSE"
[1] ".ddg.get.env: for.caller = FALSE"
[1] ".ddg.get.frame.number: for.caller ="
[1] ".ddg.data.node.exists: Looking for a in scope 0x7fc54ebb7cb0"
[1] ".ddg.get.scope: for.caller = FALSE"
[1] ".ddg.get.env: for.caller = FALSE"
[1] ".ddg.get.frame.number: for.caller ="
[1] ".ddg.data.node.exists: Looking for b in scope 0x7fc54ebb7cb0"
[1] ".ddg.get.scope: for.caller = FALSE"
[1] ".ddg.get.env: for.caller = FALSE"
[1] ".ddg.get.frame.number: for.caller ="
[1] ".ddg.data.node.exists: Looking for yy in scope 0x7fc54ebb7cb0"
[1] ".ddg.get.scope: for.caller = FALSE"
[1] ".ddg.get.env: for.caller = FALSE"
[1] ".ddg.get.frame.number: for.caller ="
[1] ".ddg.data.node.exists: Looking for d in scope 0x7fc54ebb7cb0"
[1] ".ddg.get.scope: for.caller = FALSE"
[1] ".ddg.get.env: for.caller = FALSE"
[1] ".ddg.get.frame.number: for.caller ="
[1] ".ddg.data.node.exists: Looking for e in scope 0x7fc54ebb7cb0"
[1] ".ddg.get.scope: for.caller = FALSE"
[1] ".ddg.get.env: for.caller = FALSE"
[1] ".ddg.get.frame.number: for.caller ="
[1] ".ddg.data.node.exists: Looking for f in scope 0x7fc54ebb7cb0"
[1] ".ddg.save.data: saving f(w,x,y,z,x+1,vector()) return in scope R_GlobalEnv"
[1] "ddg.return.value:  Looking for variables in +"
[2] "ddg.return.value:  Looking for variables in a"
[3] "ddg.return.value:  Looking for variables in 1"
[1] "ddg.return.value: vars.used = +" "ddg.return.value: vars.used = a"
[1] "Contents of environment a"  "Contents of environment b" 
[3] "Contents of environment d"  "Contents of environment e" 
[5] "Contents of environment f"  "Contents of environment yy"
[1] ".ddg.get.scope: for.caller = FALSE"
[1] ".ddg.get.env: for.caller = FALSE"
[1] ".ddg.get.frame.number: for.caller ="
[1] ".ddg.data.node.exists: Looking for + in scope base"
[1] ".ddg.get.scope: for.caller = FALSE"
[1] ".ddg.get.env: for.caller = FALSE"
[1] ".ddg.get.frame.number: for.caller ="
[1] ".ddg.data.node.exists: Looking for a in scope 0x7fc54ebb7cb0"
[1] ".ddg.proc2data: Looking for f(w,x,y,z,x+1,vector()) return in scope R_GlobalEnv"
[1] ".ddg.close.last.command.node: .ddg.last.cmd = val <- f(w, x, y, z, x + 1, vector())"
[2] ".ddg.close.last.command.node: .ddg.last.cmd = val <- f(w, x, y, z, x + 1, vector())"
[3] ".ddg.close.last.command.node: .ddg.last.cmd = val <- f(w, x, y, z, x + 1, vector())"
[1] ".ddg.close.last.command.node: .ddg.possible.last.cmd = "
[1] "Returning from .ddg.link.function.returns"
[1] ".ddg.close.last.command.node: created finish node; saving .ddg.last.cmd as null"
[1] ".ddg.parse.commands done evaluating  val <- f(w, x, y, z, x + 1, vector())"
[1] ".ddg.parse.commands: last.proc.node.created = Finish val <- f(w, x, y, z, x + 1, vector())"
[1] ".ddg.parse.commands: cmd.abrev = val <- f(w, x, y, z, x + 1, vector())"
[1] ".ddg.parse.commands: create = TRUE"
[1] ".ddg.parse.commands: create.procedure = FALSE"
[1] ".ddg.close.last.command.node: .ddg.last.cmd = "
[1] ".ddg.close.last.command.node: .ddg.possible.last.cmd = "
[1] ".ddg.create.data.set.edges.for.cmd: looking for  val in R_GlobalEnv"
[1] ".ddg.save.data: saving val in scope R_GlobalEnv"
[1] ".ddg.proc2data: Looking for val in scope R_GlobalEnv"
[1] ".ddg.parse.commands: cmd.text = z <- 5"
[1] ".ddg.parse.commands evaluating  z <- 5"
[1] ".ddg.parse.commands done evaluating  z <- 5"
[1] ".ddg.parse.commands: last.proc.node.created = Finish val <- f(w, x, y, z, x + 1, vector())"
[1] ".ddg.parse.commands: cmd.abrev = z <- 5"
[1] ".ddg.parse.commands: create = TRUE"
[1] ".ddg.parse.commands: create.procedure = TRUE"
[1] ".ddg.parse.commands creating Operation node"
[1] ".ddg.create.data.set.edges.for.cmd: looking for  z in R_GlobalEnv"
[1] ".ddg.save.data: saving z in scope R_GlobalEnv"
[1] ".ddg.proc2data: Looking for z in scope R_GlobalEnv"
[1] ".ddg.parse.commands: cmd.text = a <- \"character\""
[1] ".ddg.parse.commands evaluating  a <- \"character\""
[1] ".ddg.parse.commands done evaluating  a <- \"character\""
[1] ".ddg.parse.commands: last.proc.node.created = Operation z <- 5"
[1] ".ddg.parse.commands: cmd.abrev = a <- \\\"character\\\""
[1] ".ddg.parse.commands: create = TRUE"
[1] ".ddg.parse.commands: create.procedure = TRUE"
[1] ".ddg.parse.commands creating Operation node"
[1] ".ddg.create.data.set.edges.for.cmd: looking for  a in R_GlobalEnv"
[1] ".ddg.save.data: saving a in scope R_GlobalEnv"
[1] ".ddg.proc2data: Looking for a in scope R_GlobalEnv"
[1] ".ddg.parse.commands: cmd.text = storage.mode(z) <- a"
[1] ".ddg.parse.commands evaluating  storage.mode(z) <- a"
[1] ".ddg.parse.commands done evaluating  storage.mode(z) <- a"
[1] ".ddg.parse.commands: last.proc.node.created = Operation a <- \\\"character\\\""
[1] ".ddg.parse.commands: cmd.abrev = storage.mode(z) <- a"
[1] ".ddg.parse.commands: create = TRUE"
[1] ".ddg.parse.commands: create.procedure = TRUE"
[1] ".ddg.parse.commands creating Operation node"
[1] ".ddg.data.node.exists: Looking for z in scope R_GlobalEnv"
[1] ".ddg.data.node.exists: Looking for a in scope R_GlobalEnv"
[1] ".ddg.create.data.set.edges.for.cmd: looking for  z in R_GlobalEnv"
[1] ".ddg.save.data: saving z in scope R_GlobalEnv"
[1] ".ddg.proc2data: Looking for z in scope R_GlobalEnv"
[1] ".ddg.parse.commands: cmd.text = ddg.start(\"File tests\")"
[1] ".ddg.parse.commands evaluating  ddg.start(\"File tests\")"
[1] ".ddg.get.frame.number: for.caller ="
[1] ".ddg.close.last.command.node: .ddg.last.cmd = "
[1] ".ddg.close.last.command.node: .ddg.possible.last.cmd = "
[1] ".ddg.parse.commands done evaluating  ddg.start(\"File tests\")"
[1] ".ddg.parse.commands: last.proc.node.created = Start File tests"
[1] ".ddg.parse.commands: cmd.abrev = ddg.start(\\\"File tests\\\")"
[1] ".ddg.parse.commands: create = FALSE"
[1] ".ddg.parse.commands: create.procedure = FALSE"
[1] ".ddg.parse.commands: cmd.text = data.df <- read.csv(\"http://harvardforest.fas.harvard.edu/data/p00/hf000/hf000-01-daily-m.csv\")"
[1] ".ddg.parse.commands evaluating  data.df <- read.csv(\"http://harvardforest.fas.harvard.edu/data/p00/hf000/hf000-01-daily-m.csv\")"
[1] ".ddg.parse.commands done evaluating  data.df <- read.csv(\"http://harvardforest.fas.harvard.edu/data/p00/hf000/hf000-01-daily-m.csv\")"
[1] ".ddg.parse.commands: last.proc.node.created = Start File tests"
[1] ".ddg.parse.commands: cmd.abrev = data.df <- read.csv(\\\"http://harvardforest.fas.harvard.edu/d"
[1] ".ddg.parse.commands: create = TRUE"
[1] ".ddg.parse.commands: create.procedure = TRUE"
[1] ".ddg.parse.commands creating Operation node"
[1] ".ddg.data.node.exists: Looking for read.csv in scope R_GlobalEnv"
[1] ".ddg.create.data.set.edges.for.cmd: looking for  data.df in R_GlobalEnv"
[1] ".ddg.save.data: saving data.df in scope R_GlobalEnv"
[1] ".ddg.proc2data: Looking for data.df in scope R_GlobalEnv"
[1] ".ddg.parse.commands: cmd.text = if (FALSE) read.csv(\"foo.csv\")"
[1] ".ddg.parse.commands evaluating  if (FALSE) read.csv(\"foo.csv\")"
[1] ".ddg.parse.commands done evaluating  if (FALSE) read.csv(\"foo.csv\")"
[1] ".ddg.parse.commands: last.proc.node.created = Operation data.df <- read.csv(\\\"http://harvardforest.fas.harvard.edu/d"
[1] ".ddg.parse.commands: cmd.abrev = if (FALSE) read.csv(\\\"foo.csv\\\")"
[1] ".ddg.parse.commands: create = TRUE"
[1] ".ddg.parse.commands: create.procedure = TRUE"
[1] ".ddg.parse.commands creating Operation node"
[1] ".ddg.data.node.exists: Looking for if in scope R_GlobalEnv"
[1] ".ddg.data.node.exists: Looking for read.csv in scope R_GlobalEnv"
[1] ".ddg.parse.commands: cmd.text = shortdata.df <- data.df[1:100, ]"
[1] ".ddg.parse.commands evaluating  shortdata.df <- data.df[1:100, ]"
[1] ".ddg.parse.commands done evaluating  shortdata.df <- data.df[1:100, ]"
[1] ".ddg.parse.commands: last.proc.node.created = Operation if (FALSE) read.csv(\\\"foo.csv\\\")"
[1] ".ddg.parse.commands: cmd.abrev = shortdata.df <- data.df[1:100, ]"
[1] ".ddg.parse.commands: create = TRUE"
[1] ".ddg.parse.commands: create.procedure = TRUE"
[1] ".ddg.parse.commands creating Operation node"
[1] ".ddg.data.node.exists: Looking for [ in scope R_GlobalEnv"
[1] ".ddg.data.node.exists: Looking for data.df in scope R_GlobalEnv"
[1] ".ddg.data.node.exists: Looking for : in scope R_GlobalEnv"
[1] ".ddg.data.node.exists: Looking for  in scope R_GlobalEnv"
[1] ".ddg.create.data.set.edges.for.cmd: looking for  shortdata.df in R_GlobalEnv"
[1] ".ddg.save.data: saving shortdata.df in scope R_GlobalEnv"
[1] ".ddg.proc2data: Looking for shortdata.df in scope R_GlobalEnv"
[1] ".ddg.parse.commands: cmd.text = write.csv(shortdata.df, \"shortdata.csv\")"
[1] ".ddg.parse.commands evaluating  write.csv(shortdata.df, \"shortdata.csv\")"
[1] ".ddg.parse.commands done evaluating  write.csv(shortdata.df, \"shortdata.csv\")"
[1] ".ddg.parse.commands: last.proc.node.created = Operation shortdata.df <- data.df[1:100, ]"
[1] ".ddg.parse.commands: cmd.abrev = write.csv(shortdata.df, \\\"shortdata.csv\\\")"
[1] ".ddg.parse.commands: create = TRUE"
[1] ".ddg.parse.commands: create.procedure = TRUE"
[1] ".ddg.parse.commands creating Operation node"
[1] ".ddg.data.node.exists: Looking for write.csv in scope R_GlobalEnv"
[1] ".ddg.data.node.exists: Looking for shortdata.df in scope R_GlobalEnv"
[1] ".ddg.get.scope: for.caller = FALSE"
[1] ".ddg.get.env: for.caller = FALSE"
[1] ".ddg.get.frame.number: for.caller ="
[1] ".ddg.proc2data: Looking for shortdata.csv in scope "
[1] ".ddg.get.scope: for.caller = FALSE"
[1] ".ddg.get.env: for.caller = FALSE"
[1] ".ddg.get.frame.number: for.caller ="
[1] ".ddg.parse.commands: cmd.text = pdf(\"airt-vs-prec.pdf\")"
[1] ".ddg.parse.commands evaluating  pdf(\"airt-vs-prec.pdf\")"
[1] ".ddg.parse.commands done evaluating  pdf(\"airt-vs-prec.pdf\")"
[1] ".ddg.parse.commands: last.proc.node.created = Operation write.csv(shortdata.df, \\\"shortdata.csv\\\")"
[1] ".ddg.parse.commands: cmd.abrev = pdf(\\\"airt-vs-prec.pdf\\\")"
[1] ".ddg.parse.commands: create = TRUE"
[1] ".ddg.parse.commands: create.procedure = TRUE"
[1] ".ddg.parse.commands creating Operation node"
[1] ".ddg.data.node.exists: Looking for pdf in scope R_GlobalEnv"
[1] ".ddg.parse.commands: cmd.text = plot(shortdata.df$airt, shortdata.df$prec)"
[1] ".ddg.parse.commands evaluating  plot(shortdata.df$airt, shortdata.df$prec)"
[1] ".ddg.parse.commands done evaluating  plot(shortdata.df$airt, shortdata.df$prec)"
[1] ".ddg.parse.commands: last.proc.node.created = Operation pdf(\\\"airt-vs-prec.pdf\\\")"
[1] ".ddg.parse.commands: cmd.abrev = plot(shortdata.df$airt, shortdata.df$prec)"
[1] ".ddg.parse.commands: create = TRUE"
[1] ".ddg.parse.commands: create.procedure = TRUE"
[1] ".ddg.parse.commands creating Operation node"
[1] ".ddg.data.node.exists: Looking for plot in scope R_GlobalEnv"
[1] ".ddg.data.node.exists: Looking for $ in scope R_GlobalEnv"
[1] ".ddg.data.node.exists: Looking for shortdata.df in scope R_GlobalEnv"
[1] ".ddg.data.node.exists: Looking for airt in scope R_GlobalEnv"
[1] ".ddg.data.node.exists: Looking for prec in scope R_GlobalEnv"
[1] ".ddg.parse.commands: cmd.text = dev.off()"
[1] ".ddg.parse.commands evaluating  dev.off()"
[1] ".ddg.parse.commands done evaluating  dev.off()"
[1] ".ddg.parse.commands: last.proc.node.created = Operation plot(shortdata.df$airt, shortdata.df$prec)"
[1] ".ddg.parse.commands: cmd.abrev = dev.off()"
[1] ".ddg.parse.commands: create = TRUE"
[1] ".ddg.parse.commands: create.procedure = TRUE"
[1] ".ddg.parse.commands creating Operation node"
[1] ".ddg.data.node.exists: Looking for dev.off in scope R_GlobalEnv"
[1] ".ddg.get.scope: for.caller = FALSE"
[1] ".ddg.get.env: for.caller = FALSE"
[1] ".ddg.get.frame.number: for.caller ="
[1] ".ddg.proc2data: Looking for airt-vs-prec.pdf in scope "
[1] ".ddg.get.scope: for.caller = FALSE"
[1] ".ddg.get.env: for.caller = FALSE"
[1] ".ddg.get.frame.number: for.caller ="
[1] ".ddg.parse.commands: cmd.text = ddg.finish(\"File tests\")"
[1] ".ddg.parse.commands evaluating  ddg.finish(\"File tests\")"
[1] ".ddg.close.last.command.node: .ddg.last.cmd = "
[1] ".ddg.close.last.command.node: .ddg.possible.last.cmd = "
[1] ".ddg.parse.commands done evaluating  ddg.finish(\"File tests\")"
[1] ".ddg.parse.commands: last.proc.node.created = Finish File tests"
[1] ".ddg.parse.commands: cmd.abrev = ddg.finish(\\\"File tests\\\")"
[1] ".ddg.parse.commands: create = FALSE"
[1] ".ddg.parse.commands: create.procedure = FALSE"
[1] ".ddg.parse.commands: cmd.text = tryCatch(foo_val <- foo(), error = function(e) {})"
[1] ".ddg.parse.commands evaluating  tryCatch(foo_val <- foo(), error = function(e) {"
[2] ".ddg.parse.commands evaluating  })"                                              
[1] ".ddg.parse.commands done evaluating  tryCatch(foo_val <- foo(), error = function(e) {"
[2] ".ddg.parse.commands done evaluating  })"                                              
[1] ".ddg.parse.commands: last.proc.node.created = Finish File tests"
[1] ".ddg.parse.commands: cmd.abrev = tryCatch(foo_val <- foo(), error = function(e) {})"
[1] ".ddg.parse.commands: create = TRUE"
[1] ".ddg.parse.commands: create.procedure = TRUE"
[1] ".ddg.parse.commands creating Operation node"
[1] ".ddg.data.node.exists: Looking for tryCatch in scope R_GlobalEnv"
[1] ".ddg.data.node.exists: Looking for foo in scope R_GlobalEnv"
[1] ".ddg.parse.commands: cmd.text = error <- foo()"
[1] ".ddg.parse.commands evaluating  error <- foo()"
[1] "Error in eval(expr, envir, enclos): could not find function \"foo\"\n"
[1] ".ddg.close.last.command.node: .ddg.last.cmd = "
[1] ".ddg.close.last.command.node: .ddg.possible.last.cmd = error <- foo()"
[2] ".ddg.close.last.command.node: .ddg.possible.last.cmd = error <- foo()"
[3] ".ddg.close.last.command.node: .ddg.possible.last.cmd = error <- foo()"
[1] ".ddg.open.new.command.node: saving .ddg.last.cmd as error <- foo()"
[2] ".ddg.open.new.command.node: saving .ddg.last.cmd as error <- foo()"
[3] ".ddg.open.new.command.node: saving .ddg.last.cmd as error <- foo()"
[1] ".ddg.proc2data: Looking for error.msg in scope "
[1] ".ddg.get.scope: for.caller = FALSE"
[1] ".ddg.get.env: for.caller = FALSE"
[1] ".ddg.get.frame.number: for.caller ="
Execution Time = 1.079078
