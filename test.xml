<project
    name="TESTS"
	xmlns:if="ant:if"
    xmlns:unless="ant:unless">

  <!-- Get the base directory -->
  <dirname 
      property="TESTS.basedir"
      file="${ant.file.TESTS}"
  />

  <!-- For windows, we need to replace \ (backslashes) with / (forwardslashes) -->
  <loadresource property="TESTS.dir"> 
    <propertyresource name="TESTS.basedir"/>
      <filterchain>
        <tokenfilter>
          <filetokenizer/>
          <replacestring from="\" to="/"/>
        </tokenfilter>
      </filterchain>
  </loadresource>

  <!-- Function to run tests on different scripts -->
  <target name="run-test">
      <!-- Execute the R Script -->
  	<exec executable="Rscript" dir="${dir}" output="${out}" >
  		<arg line="${script-file}" />
  	</exec>

    <!-- Directory to store local files for comparison -->
    <mkdir dir="${dir}/local" />

    <!-- Obtain name of expected ddg.txt, expected *.out, and actual *.out -->
    <basename property="ddg_name" file="${expected_ddg}" />
    <basename property="expected_out_name" file="${expected_out}" />
    <basename property="out_name" file="${out}" />

    <!-- Make copy of output files (.out and ddg.txt) as well as expected 
         outputs for diff. Append .local to all files -->
    <copy todir="${dir}/local" overwrite="true">
      <fileset file="${dir}/ddg/ddg.txt" />
      <fileset file="${expected_ddg}" />
      <fileset file="${expected_out}" />
      <fileset file="${out}"/>
      <globmapper from="*" to="*.local"/>
    </copy>

    <!-- Delete all timestamp occurrences -->
    <replaceregexp flags="g"> 
      <regexp pattern="[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}.[0-9]{2}.[0-9]{2}" />
      <substitution expression=""/>
      <fileset dir="${dir}/local">
        <include name="*.local" />
      </fileset>
    </replaceregexp>

    <!-- Replace local version with correct directories (string to match is [DIR]-->
    <replaceregexp flags="g"> 
      <regexp pattern="\[DIR\]" />
      <substitution expression="${TESTS.dir}/${dir}"/>
      <fileset dir="${dir}/local">
        <include name="*.local" />
      </fileset>
    </replaceregexp>

      <!-- Condition checking .out files -->
  	<condition property="output-same">
			<filesmatch file1="${dir}/local/${out_name}.local"
            			file2="${dir}/local/${expected_out_name}.local"/>
    </condition>

    <!-- Condition checking whether outputs need to match -->
    <condition property="should-warn">
    	<or>
    		<equals arg1="${fail_out}" arg2="false"/>
    		<isset property="output-same" />
    	</or>
    </condition>

    <!-- Fail unless told not to -->
    <fail message="${script-file} failed with different output"
      unless="should-warn"/>
      <!-- Execute diff on .out files unless output had to be the same -->
    <exec executable="diff" unless:true="${output-same}" >
      <arg line="${dir}/local/${out_name}.local ${dir}/local/${expected_out_name}.local" />
    </exec>

      <!-- Exectute diff on .txt files -->
  	<exec executable="diff" >
  		<arg line="${dir}/local/ddg.txt.local ${dir}/local/${ddg_name}.local" />
  	</exec>
  </target>

  <target name="basic-test">
  	<antcall target="run-test">
  		<param name="dir" value="examples/ddgTest"/>
  		<param name="out" value="examples/ddgTest/basicTest.out"/>
  		<param name="script-file" value="basicTest.r"/>
  		<param name="expected_out" value="examples/ddgTest/expected_basicTest.out"/>
  		<param name="expected_ddg" value="examples/ddgTest/expected_basicTest_ddg.txt"/>
  		<param name="fail_out" value="true" />
  	</antcall>
  </target>

  <target name="S4-object-test">
  	<antcall target="run-test">
  		<param name="dir" value="examples/S4ObjectTest"/>
  		<param name="out" value="examples/S4ObjectTest/S4ObjectTest.out"/>
  		<param name="script-file" value="S4ObjectTest.R"/>
  		<param name="expected_out" value="examples/S4ObjectTest/expected_S4ObjectTest.out"/>
  		<param name="expected_ddg" value="examples/S4ObjectTest/expected_S4ObjectTest_ddg.txt"/>
  		<param name="fail_out" value="false" />
  	</antcall>
  </target>

  <target name="ddg-test">
  	<antcall target="run-test">
  		<param name="dir" value="examples/ddgTest"/>
  		<param name="out" value="examples/ddgTest/ddgTest.out"/>
  		<param name="script-file" value="ddgTest.r"/>
  		<param name="expected_out" value="examples/ddgTest/expected_ddgTest.out"/>
  		<param name="expected_ddg" value="examples/ddgTest/expected_ddg.txt"/>
  		<param name="fail_out" value="true" />
  	</antcall>
  </target>

  <target name="checkpoint-test">
  	<antcall target="run-test">
  		<param name="dir" value="examples/checkpointTest"/>
  		<param name="out" value="examples/checkpointTest/checkpointTest.out"/>
  		<param name="script-file" value="CheckpointTest.r"/>
  		<param name="expected_out" value="examples/checkpointTest/expected_checkpointTest.out"/>
  		<param name="expected_ddg" value="examples/checkpointTest/expected_CheckpointTest_ddg.txt"/>
  		<param name="fail_out" value="false" />
  	</antcall>
  </target>
  
  <target name="checkpoint-file-test">
  	<antcall target="run-test">
  		<param name="dir" value="examples/checkpointTest"/>
  		<param name="out" value="examples/checkpointTest/checkpointFileTest.out"/>
  		<param name="script-file" value="CheckpointFileTest.r"/>
  		<param name="expected_out" value="examples/checkpointTest/expected_checkpointFileTest.out"/>
  		<param name="expected_ddg" value="examples/checkpointTest/expected_CheckpointFileTest_ddg.txt"/>
  		<param name="fail_out" value="false" />
  	</antcall>
  </target>
  
  <target name="calculate-square-root-1-test">
  	<antcall target="run-test">
  		<param name="dir" value="examples/CalculateSquareRoot"/>
  		<param name="out" value="examples/CalculateSquareRoot/calculate-square-root-1.out"/>
  		<param name="script-file" value="calculate-square-root-1.r"/>
  		<param name="expected_out" value="examples/CalculateSquareRoot/expected_calculate-square-root-1.out"/>
  		<param name="expected_ddg" value="examples/CalculateSquareRoot/expected_calculate-square-root-1_ddg.txt"/>
  		<param name="fail_out" value="false" />
  	</antcall>
  </target>
  
  <target name="calculate-square-root-2-test">
  	<antcall target="run-test">
  		<param name="dir" value="examples/CalculateSquareRoot"/>
  		<param name="out" value="examples/CalculateSquareRoot/calculate-square-root-2.out"/>
  		<param name="script-file" value="calculate-square-root-2.r"/>
  		<param name="expected_out" value="examples/CalculateSquareRoot/expected_calculate-square-root-2.out"/>
  		<param name="expected_ddg" value="examples/CalculateSquareRoot/expected_calculate-square-root-2_ddg.txt"/>
  		<param name="fail_out" value="false" />
  	</antcall>
  </target>
  
  <target name="daily-solar-radiation-1-test">
  	<antcall target="run-test">
  		<param name="dir" value="examples/DailySolarRadiation"/>
  		<param name="out" value="examples/DailySolarRadiation/daily-solar-radiation-1.out"/>
  		<param name="script-file" value="daily-solar-radiation-1.r"/>
  		<param name="expected_out" value="examples/DailySolarRadiation/expected_daily-solar-radiation-1.out"/>
  		<param name="expected_ddg" value="examples/DailySolarRadiation/expected_daily-solar-radiation-1_ddg.txt"/>
  		<param name="fail_out" value="true" />
  	</antcall>
  </target>
  
  <target name="daily-solar-radiation-2-test">
  	<antcall target="run-test">
  		<param name="dir" value="examples/DailySolarRadiation"/>
  		<param name="out" value="examples/DailySolarRadiation/daily-solar-radiation-2.out"/>
  		<param name="script-file" value="daily-solar-radiation-2.r"/>
  		<param name="expected_out" value="examples/DailySolarRadiation/expected_daily-solar-radiation-2.out"/>
  		<param name="expected_ddg" value="examples/DailySolarRadiation/expected_daily-solar-radiation-2_ddg.txt"/>
  		<param name="fail_out" value="true" />
  	</antcall>
  </target>
  
  <target name="test-all" depends="basic-test, ddg-test, S4-object-test, checkpoint-test, checkpoint-file-test, calculate-square-root-1-test, calculate-square-root-2-test, daily-solar-radiation-1-test, daily-solar-radiation-2-test" />

	<target name="interactive-test">
  	<exec executable="Rscript" dir="examples" >
  		<arg line="RscriptTest.r" />
  	</exec>
  </target>

</project>
